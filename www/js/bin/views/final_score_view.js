// Generated by CoffeeScript 1.9.0
(function() {
  var __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  define(["backbone", "views/base_view", "text!tpl/final_score.html", "text!tpl/final_score_loading.html", "models/game"], function(Backbone, BaseView, template, loadingTemplate, Game) {
    var FinalScoreView;
    FinalScoreView = (function(_super) {
      __extends(FinalScoreView, _super);

      function FinalScoreView() {
        return FinalScoreView.__super__.constructor.apply(this, arguments);
      }

      FinalScoreView.prototype.template = _.template(template);

      FinalScoreView.prototype.loadingTemplate = _.template(loadingTemplate);

      FinalScoreView.prototype.initialize = function(options) {
        return this.gameId = options.gameId;
      };

      FinalScoreView.prototype.render = function() {
        this.$el.html(this.loadingTemplate());
        this.game = new Game({
          id: this.gameId
        });
        this.game.fetch().done((function(_this) {
          return function(data) {
            console.log(data);
            return _this.$el.html(_this.template({
              game: data
            }));
          };
        })(this)).fail((function(_this) {
          return function() {
            return Backbone.history.loadUrl("home");
          };
        })(this));
        return this;
      };

      return FinalScoreView;

    })(BaseView);
    return FinalScoreView;
  });

}).call(this);
