// Generated by CoffeeScript 1.9.0
(function() {
  var __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  define(["backbone", "text!tpl/display_values.html"], function(Backbone, displayValuesTemplate) {
    var BaseView;
    return BaseView = (function(_super) {
      __extends(BaseView, _super);

      function BaseView() {
        if (this.eventBus != null) {
          _.each(this.eventBus, (function(_this) {
            return function(item) {
              var key, method;
              key = Object.keys(item)[0];
              method = _this[item[key]];
              PictureTrivia.eventBus.on(key, method, _this);
            };
          })(this));
        }
        BaseView.__super__.constructor.apply(this, arguments);
      }

      BaseView.prototype.remove = function() {
        if (this.eventBus != null) {
          _.each(this.eventBus, (function(_this) {
            return function(item) {
              var key, method;
              key = Object.keys(item)[0];
              method = _this[item[key]];
              return PictureTrivia.eventBus.off(key, method, _this);
            };
          })(this));
        }
        if (this.subViews != null) {
          _.each(this.subViews, function(subView) {
            return subView.remove();
          });
        }
        this.undelegateEvents();
        Backbone.View.prototype.remove.call(this);
      };

      BaseView.prototype.events = function() {
        return _.extend({}, this.baseEvents, this.additionalEvents);
      };

      BaseView.prototype.goBack = function() {
        return history.go(-1);
      };

      BaseView.prototype.getDisplayValue = function(val) {
        var displayValue, tpl, values;
        tpl = _.template(displayValuesTemplate);
        values = JSON.parse($(tpl()).text());
        displayValue = _.find(values, function(row) {
          return row.key === val;
        });
        if (displayValue == null) {
          return "";
        }
        return displayValue.displayVal;
      };

      return BaseView;

    })(Backbone.View);
  });

}).call(this);
